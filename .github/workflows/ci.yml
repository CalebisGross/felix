name: CI

on:
  push:
    branches: [main, develop, memory_qa]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests
        run: |
          pytest tests/unit -v \
            --cov=src \
            --cov-report=term-missing \
            --cov-report=xml \
            -m "unit and not slow"

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-${{ matrix.python-version }}

  lint:
    name: Lint and type check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff mypy

      - name: Run ruff (linting)
        run: |
          ruff check src/ tests/ --output-format=github

      - name: Run mypy (type checking)
        run: |
          mypy src/ --ignore-missing-imports --no-strict-optional
        continue-on-error: true  # Don't fail on type errors yet

  security:
    name: Security scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install safety bandit

      - name: Run safety (dependency vulnerabilities)
        run: |
          safety check --json || true
        continue-on-error: true

      - name: Run bandit (code security)
        run: |
          bandit -r src/ -f json || true
        continue-on-error: true

  build-status:
    name: Build Status
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: always()

    steps:
      - name: Check build status
        run: |
          if [ "${{ needs.test.result }}" != "success" ]; then
            echo "Tests failed"
            exit 1
          fi
          if [ "${{ needs.lint.result }}" != "success" ]; then
            echo "Linting failed"
            exit 1
          fi
          echo "All checks passed!"
